Wire.begin();
   while (!huskylens.begin(Wire))
  {
    LOG(F("Begin failed!"));
    // LOG(F("2.Please recheck the connection."));
    delay(500);
    digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));
    // break;
  }


  huskylens.writeAlgorithm(ALGORITHM_TAG_RECOGNITION); // Switch the algorithm to object tracking.

void Resultado_recebido(HUSKYLENSResult result)
{

  if (result.command == COMMAND_RETURN_BLOCK)
  {
    // https://dfimg.dfrobot.com/nobody/wiki/400e09570d1ff647bd5e24da4ef4a0f9.png

    //  LOG(String() + F("X:") + result.xCenter + F(" Y:") + result.yCenter + F(" W:") + result.width + F(" H:") + result.height + F(" ID:") + result.ID + F(" Area:") + result.width * result.height) ;

    String texto = "";
    texto += String(result.width); // 0
    texto += ",";
    texto += String(result.height); // 1
    texto += ",";

    texto += String(result.xCenter); // 2
    texto += ",";
    texto += String(result.yCenter); // 3
    texto += ",";

    texto += String(result.ID); // 4

    LOG(texto);

    digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));
  }
  else
  {
    LOG("Object unknown!");
  }
}

if (!huskylens.request())
  {
      //  LOG(F("Fail to request data from HUSKYLENS, recheck the connection!"));
  }
  // else
  {
  }